@page "/priorities"

@inject IPriorityService priorityService

<PageHeader Title="Priorities" />

<main class="content p-3">

    @if (titlePriorities is null)
    {
        <LoadingPanel />
    }
    else
    {
        <PriorityItemsList HeaderText="Titles" Names="titles" Items="titlePriorities"
                           OnAdd="AddTitle" OnSave="SaveTitle" OnDelete="DeleteTitle" />
    }

    @if (appPriorities is null)
    {
        <LoadingPanel />
    }
    else
    {
        <PriorityItemsList HeaderText="Apps" Names="apps" Items="appPriorities"
                           OnAdd="AddApp" OnSave="SaveApp" OnDelete="DeleteApp" />
    }

</main>

@code {
    List<PriorityViewModel> titlePriorities;
    List<string> titles;
    List<PriorityViewModel> appPriorities;
    List<string> apps;

    protected override async Task OnInitializedAsync()
    {
        titles = await priorityService.GetTitlesAsync();
        titles.Insert(0, null);

        titlePriorities = await priorityService.GetTitlePrioritiesAsync();

        apps = await priorityService.GetAppsAsync();
        apps.Insert(0, null);

        appPriorities = await priorityService.GetAppPrioritiesAsync();
    }

    async Task AddTitle(PriorityViewModel viewModel)
    {
        await priorityService.AddTitlePriorityAsync(viewModel);

        titlePriorities.Add(viewModel);
    }

    async Task SaveTitle(PriorityViewModel viewModel)
    {
        await priorityService.SaveTitlePriorityAsync(viewModel);

        var item = titlePriorities.Where(r => r.Name == viewModel.Name).Single();
        item.PriorityLevel = viewModel.PriorityLevel;
    }

    async Task DeleteTitle(PriorityViewModel viewModel)
    {
        await priorityService.DeleteTitlePriorityAsync(viewModel);

        var item = titlePriorities.Where(r => r.Name == viewModel.Name).Single();
        titlePriorities.Remove(item);
    }

    async Task AddApp(PriorityViewModel viewModel)
    {
        await priorityService.AddAppPriorityAsync(viewModel);

        appPriorities.Add(viewModel);
    }

    async Task SaveApp(PriorityViewModel viewModel)
    {
        await priorityService.SaveAppPriorityAsync(viewModel);

        var item = appPriorities.Where(r => r.Name == viewModel.Name).Single();
        item.PriorityLevel = viewModel.PriorityLevel;
    }

    async Task DeleteApp(PriorityViewModel viewModel)
    {
        await priorityService.DeleteAppPriorityAsync(viewModel);

        var item = appPriorities.Where(r => r.Name == viewModel.Name).Single();
        appPriorities.Remove(item);
    }
}
